import moviepy.editor as mp
import os
import numpy as np
from keras.models import load_model
import skimage.io as io
import matplotlib.pyplot as plt
def predAndPlot(root):
  if not os.path.exists('/content/temp'):
      os.makedirs('/content/temp')
  l1=len(root)
  j=-1
  for i in range(l1-1,-1,-1):
    if j==-1 and root[i]!='/':
      j=i
    if j!=-1 and root[i]=='/':
      break
  name=root[i+1:j+1]
  name=name[:-4]
  root=root[:j+1]
  !mkdir '/content/temp/videoTempFor_{name}/'
  root2='/content/temp/videoTempFor_{}/'.format(name)
  video = mp.VideoFileClip(root)
  video=video.resize((320,240))
  l=video.duration
  i=0
  j=5
  while i+j<=l:
    v=video.subclip(i,i+j)
    k=int(i/j)
    if k<10:
      v.write_videofile(root2+"{}-00{}.mp4".format(name,k),fps=10,audio=False)
    elif k<100:
      v.write_videofile(root2+"{}-0{}.mp4".format(name,k),fps=10,audio=False)
    else:
      v.write_videofile(root2+"{}-{}.mp4".format(name,k),fps=10,audio=False)
    i+=j
  names=os.listdir(root2)
  names.sort()
  inp=np.ndarray((len(names),50,240,320,3), dtype='float32')
  for i,v in enumerate(names):
    !mkdir '/content/temp/frameFor_{v}/'
    !cd openpose &&./build/examples/openpose/openpose.bin --video $root2$v --write_images '/content/temp/frameFor_{v}/' --disable_blending --display 0
    root3='/content/temp/frameFor_{}/'.format(v)
    ls=os.listdir(root3)
    ls.sort()
    for j,k in enumerate(ls):
      inp[i,j,:,:,:]=(io.imread(root3+k))/255
  model=load_model('/content/drive/My Drive/my_model.h5')
  result=model.predict(inp)
  print(result)
  x=[]
  for i in range(len(result)):
    x.append(5*(i+1))
  plt.plot(x,result,label='prediction')
  plt.ylim((0,1))
  plt.xticks(x, x)
  plt.xlabel('seconds')
  plt.ylabel('prob of stretching body')
  plt.title('prediction for every 5s')
  plt.legend()
  plt.show()
